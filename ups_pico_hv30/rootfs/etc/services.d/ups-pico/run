#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the example service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

# Add your code here

# Declare variables
declare Log_level

## Check if config folder and files exists 
bashio::log.info "Checking if config folder exists..."
if [ -d /config/ups_pico_hv30 ];
then
    #[ ! -f /config/ups_pico_hv30/emailAlertBody.template ] && cp /ups-pico/install/picofssd/etc/emailAlertBody.template /config/ups_pico_hv30/emailAlertBody.template
    #[ ! -f /config/ups_pico_hv30/emailAlertSubject.template ] && cp /ups-pico/install/picofssd/etc/emailAlertSubject.template /config/ups_pico_hv30/emailAlertSubject.template
    bashio::log.info "Config folder exists. Copying default files..."
    cp /ups-pico/install/picofssd/etc/emailAlertBody.template /config/ups_pico_hv30/emailAlertBody.template
    cp /ups-pico/install/picofssd/etc/emailAlertSubject.template /config/ups_pico_hv30/emailAlertSubject.template
else
	bashio::log.info "Config folder does not exist. Creating and copying files..."
    mkdir /config/ups_pico_hv30
    cp /ups-pico/install/picofssd/etc/* /config/ups_pico_hv30
fi

## Check if provided config file exits or switch to default
# if [ -f /config/ups_pico_hv30/${XML_File} ];
# then
#     bashio::log.info "Provided XML File exists"
# else
# 	bashio::log.info "Provided XML File does not exist. Switching to default..."
#     XML_File="picofssd.xml"
# fi

## Get the 'Log_level' key from the user config options.
Log_level=$(bashio::config 'log_level')
bashio::log.info "Log level: ${Log_level}"

## Run your program
bashio::log.info "Starting the picofssd daemon..."
#exec /usr/local/bin/picofssd -D -e
#exec /usr/local/bin/picofssd -d -x /config/ups_pico_hv30/${XML_File}
exec /usr/local/bin/picofssd -d -l ${Log_level}
